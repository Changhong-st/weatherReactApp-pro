{"version":3,"sources":["App/components/Weather/index.module.scss","App/components/Current/Country/country.module.scss","App/components/Current/City/city.module.scss","App/components/Current/index.module.scss","App/components/WeatherBottom/index.module.scss","App/utils/utils.js","App/components/WeatherBottom/OtherCities/otherCities.module.scss","App/components/WeatherBottom/ForecastWeather/ForecastWeather.module.scss","App/components/Current/Country/country.jsx","App/api/WeatherClass.js","App/api/getWeather.js","App/components/Current/City/city.jsx","App/components/Current/Info/info.jsx","App/components/Current/index.jsx","App/components/WeatherBottom/OtherCities/otherCitiesBtn.jsx","App/components/WeatherBottom/OtherCities/otherCitiesBtnList.jsx","App/components/WeatherBottom/OtherCities/index.jsx","App/components/WeatherBottom/ForecastWeather/ForecastListItem.jsx","App/components/WeatherBottom/ForecastWeather/ForecastWeather.jsx","App/components/WeatherBottom/index.jsx","App/components/Weather/index.jsx","App/App.js","index.js","App/components/Current/Info/info.module.scss"],"names":["module","exports","xDigits","number","x","formatted","Math","round","toCelsius","Kelvin","Celsius","toFahrenheit","Fahrenheit","windDirect","windDegree","parseInt","directionGap","defaultValue","Country","props","useState","hide","setHide","country","setCountry","toggleInput","handleSubmit","e","preventDefault","onCountryChange","className","styles","onClick","onSubmit","value","onChange","target","onBlur","onFocus","units","require","Weather","data","this","temperature","main","temp","humidity","wind","speed","weather","icon","description","Forecast","day","axios","APPID","process","openWeather","create","baseURL","params","appid","requestWeather","location","weatherType","route","response","get","q","cc","city","a","Promise","all","then","responseArray","curRes","forRes","cityName","name","countryCode","current","forecast","formatForecast","filterRawForecast","list","map","item","catch","err","console","log","message","rawForecast","filteredForecast","reduce","_","cur","index","push","days","dayList","today","Date","currentIndex","getDay","formattedForecast","i","length","getWeather","CurrentCity","checkCityInput","setLoading","updateDataArray","setCity","updateData","inputCity","undefined","newData","alert","City","CurrentInfo","division","Current","currentData","setCountryCode","useEffect","inputCountry","inputCode","validatedInput","getCode","getName","getCountryCode","toUpperCase","CurrentBottom","OtherCityButton","handleClick","onOtherCitiesClick","src","alt","Component","OtherCityBtnList","cityArray","buttons","OtherCityButtons","OtherCity","ForecastListItem","iconUrlAddress","info","ForecastWeather","forecastArray","forecastList","WeatherBottom","dataArray","slice","loading","useReducer","action","newDataArray","type","array","pop","splice","Error","unshift","dispatch","initialRequest","defaultCities","defaultCountry","cityData","buttonIndex","arrayIndex","findIndex","style","borderRadius","config","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2447d5d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Current\":\"Weather_Current__3bpLd\",\"division\":\"Weather_division__10rJZ\",\"CurrentBottom\":\"Weather_CurrentBottom__3UXuD\",\"Weather\":\"Weather_Weather__aOLMh\",\"loading\":\"Weather_loading__1ChZS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Country\":\"country_Country__2tP0E\",\"Country__name\":\"country_Country__name__2GYrt\",\"Country__form\":\"country_Country__form__GFvp4\",\"slide\":\"country_slide__3znjt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"City\":\"city_City__1vNVe\",\"City__form\":\"city_City__form__1bxYG\",\"City__form__input\":\"city_City__form__input__3ygLL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Current\":\"Current_Current__2czYQ\",\"division\":\"Current_division__3V6nh\",\"CurrentBottom\":\"Current_CurrentBottom__kUXio\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WeatherBottom\":\"WeatherBottom_WeatherBottom__2_3i2\",\"division\":\"WeatherBottom_division__1IgkF\"};","function toCelsius (Kelvin) {\n  let Celsius = Kelvin - 273.15;\n  Celsius = xDigits(Celsius);\n  return Celsius;\n}\n\nfunction toFahrenheit (Kelvin) {\n  let Fahrenheit = 9 * (Kelvin - 273.15) / 5 + 32;\n  Fahrenheit = xDigits(Fahrenheit);\n  return Fahrenheit;\n}\n\n// default to one digits\nfunction xDigits (number, x = 1) {\n  let formatted = Math.round(number * 10**x) / 10**x;\n  return formatted;\n}\n\nfunction windDirect (windDegree) {\n  const directionList = [\"N\", \"NNE\",\"NE\",\"ENE\",\"E\",\"ESE\",\"SE\",\"SSE\",\"S\",\"SSW\",\"SW\",\"WSW\",\"W\",\"WNW\",\"NW\",\"NNW\",\"N\"];\n  const directionGap = 22.5;\n  const offset = directionGap/2;   //11.25 degree\n  const indexMapping = parseInt((windDegree + offset) / directionGap) + 1;\n  let direction = directionList[indexMapping];\n  return direction; \n}\n\nmodule.exports = {\n  toCelsius,\n  toFahrenheit,\n  windDirect\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"OtherCity\":\"otherCities_OtherCity__3aLa9\",\"OtherCity__title\":\"otherCities_OtherCity__title__2oVji\",\"OtherCityButton\":\"otherCities_OtherCityButton__2voyZ\",\"OtherCityButton__city\":\"otherCities_OtherCityButton__city__2FxMs\",\"OtherCityButton__temperature\":\"otherCities_OtherCityButton__temperature__2kzmh\",\"OtherCityButton__icon\":\"otherCities_OtherCityButton__icon__8lL1F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ForecastWeather\":\"ForecastWeather_ForecastWeather__1Gw_o\",\"ForecastWeather__title\":\"ForecastWeather_ForecastWeather__title__3e5jN\",\"ForecastList\":\"ForecastWeather_ForecastList__1Z49n\",\"ForecastList__Item\":\"ForecastWeather_ForecastList__Item__3MzFk\",\"ForecastList__Item__day\":\"ForecastWeather_ForecastList__Item__day__1ImNJ\",\"ForecastList__Item__icon\":\"ForecastWeather_ForecastList__Item__icon__1459z\",\"ForecastList__Item__temperature\":\"ForecastWeather_ForecastList__Item__temperature__3ZxLF\"};","import React, {useState} from 'react';\nimport styles from './country.module.scss';\n\nconst defaultValue = 'country or code';\n\nconst Country = (props) => {\n\tconst [hide, setHide] = useState(true); \n\tconst [country, setCountry] = useState(defaultValue);\n    \n\tconst toggleInput = () => {\n\t\tsetHide(!hide);\n\t\tsetCountry(defaultValue);    \n\t};\n\n\tconst handleFocus = () => {\n\t\tif (country === defaultValue) {\n\t\t\tsetCountry('');\n\t\t}\n\t};\n\n\tconst handleChange = (e) => {\n\t\tsetCountry(e.target.value)\n\t}\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tprops.onCountryChange(country);\n\t\ttoggleInput();\n\t};\n\n\tconst handleBlur = (e) => {\n\t\treturn (country === '')? toggleInput() : handleSubmit(e);\n\t};\n\n\treturn (\n\t\t<div className={styles.Country}>\n\t\t\t<div    \n\t\t\t\tclassName={styles['Country__name']}\n\t\t\t\tonClick={toggleInput}\n\t\t\t>\n\t\t\t\t{props.country}\n\t\t\t</div>\n\t\t\t{hide?\n\t\t\t\t''\n\t\t\t:\n\t\t\t\t<form   \n\t\t\t\t\tclassName={styles['Country__form']}\n\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t>\n\t\t\t\t\t<input  \n\t\t\t\t\t\tvalue={country}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\tonFocus={handleFocus}\n\t\t\t\t\t/>\n\t\t\t\t</form> \n\t\t\t}   \n\t\t</div>\n\t);\n}\n\nexport default Country;","const units = require ('../utils/utils');\n\nclass Weather {\n    constructor(data) {\n        this.temperature = units.toCelsius(data.main.temp);\n        this.humidity = data.main.humidity;\n        this.wind = data.wind.speed;\n        this.weather = data.weather[0].main;\n        this.icon = data.weather[0].icon;\n        this.description = data.weather[0].description;\n    }\n};\nclass Forecast {\n\tconstructor(data, day) {\n\t\tthis.day = day;\n\t\tthis.temperature = Math.round(data.temperature);\n\t\tthis.icon = data.icon;\n\t\tthis.description = data.description;\n\t}\n};\n\nexport {\n    Weather,\n    Forecast\n};","import { Weather, Forecast } from './WeatherClass';\nconst axios = require('axios');\n\nconst APPID =`${process.env.REACT_APP_APPID}`;\n\nconst openWeather = axios.create({\n    baseURL: 'http://api.openweathermap.org/data/2.5',\n    params: {\n        appid: APPID,\n    }\n});\n\nfunction requestWeather (location, weatherType = 'current') {\n    const route = (weatherType === 'forecast')? '/forecast':'/weather';\n    const response = openWeather.get(route, {\n        params: { \n            q: location\n        }\n    });\n    return response;\n}\n\nasync function getWeather (cc, city) {\n    const location = `${city}, ${cc}`;\n    return Promise.all([requestWeather(location), requestWeather(location, 'forecast')])\n    .then((responseArray) =>{\n        const curRes = responseArray[0];\n        const forRes = responseArray[1];\n        const cityName = forRes.data.city.name;\n        const countryCode = forRes.data.city.country;\n        const current = new Weather (curRes.data);\n        const rawForecast = forRes.data.list.map(item => new Weather(item));\n        const filteredForecast = filterRawForecast(rawForecast);\n        const forecast = formatForecast(filteredForecast);\n        const data = {cityName, countryCode, current, forecast};\n        return data;\n    })\n    .catch(err => {\n        console.log(err.message);\n    });\n}\n\nfunction filterRawForecast (rawForecast) {\n    let filteredForecast = [];\n    rawForecast.reduce((_, cur, index) => {\n        if (index % 8 === 0){\n            return filteredForecast.push(cur)\n        }\n        return filteredForecast;\n    }, 0)\n    return filteredForecast;\n}\n\nfunction formatForecast (filteredForecast, days = 5) {\n\tconst dayList = ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN'];\n\tconst today = new Date();\n\tlet currentIndex = today.getDay() - 1;\n\tlet formattedForecast = [];\n\n\tfor (let i = 0; i < days; i++) {\n\t\tcurrentIndex = (currentIndex === dayList.length -1)? 0 : currentIndex + 1;\n        formattedForecast.push(new Forecast(filteredForecast[i], dayList[currentIndex]));\n\t}\n\treturn formattedForecast;\n}\n\nexport default getWeather;\n","import React, { useState } from 'react';\nimport getWeather from '../../../api/getWeather';\nimport styles from './city.module.scss';\n\nconst defaultValue = 'Which city?';\nconst CurrentCity = ({cityName, country, checkCityInput, setLoading, updateDataArray}) => {\n\tconst [city, setCity] = useState(defaultValue);\n\n\tconst handleFocus = () => {\n\t\tif (city === defaultValue) {\n\t\t\tsetCity('');\n\t\t}\t\n\t};\n\n\tconst updateData = async(inputCity) => {\n\t\tsetLoading(true);\n\t\tconst newData = await getWeather(country, inputCity);\n\t\tif(newData === undefined) {\n\t\t\tsetLoading(false);\n\t\t\treturn alert('country or city can not found');\n\t\t}\n\t\tupdateDataArray(newData);\n\t\tsetLoading(false);\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tconst validate = checkCityInput(city, country);\n\t\tif(validate) {\n\t\t\tupdateData(city);\n\t\t}\n\t\tsetCity(defaultValue);\n\t};\n\n\tconst handleChange = (e) => {\n\t\tsetCity(e.target.value)\n\t}\n\n\tconst handleBlur = () => {\n\t\treturn (city === '') && setCity(defaultValue);\n\t};\n\n\treturn (\n\t\t<div className={styles.City}>\n\t\t\t<h1>{cityName}</h1>\n\t\t\t<form \n\t\t\t\tclassName={styles['City__form']} \n\t\t\t\tonSubmit={handleSubmit}\n\t\t\t>\n\t\t\t\t<input \n\t\t\t\t\tclassName={styles['City__form__input']}\n\t\t\t\t\tvalue={city}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tonFocus={handleFocus}\n\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t/>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nexport default CurrentCity;","import React from 'react';\nimport styles from './info.module.scss';\n\nfunction CurrentInfo (props) {\n\treturn (\n\t\t<div className={styles.CurrentInfo}>\n\t\t\t<div className={styles['CurrentInfo__temperature']}>\n\t\t\t\t<span>{props.temperature} °</span>\n\t\t\t</div>\n\t\t\t<div className={styles['CurrentInfo__weather']}>\n\t\t\t\t<span>{props.weather}</span>\n\t\t\t</div>\n\t\t\t<div className={styles['CurrentInfo__details']}>\n\t\t\t\t<div className={styles['CurrentInfo__details__item']}>\n\t\t\t\t\t<span>HUMIDITY</span>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<span>{props.humidity}%</span>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.division} />\n\t\t\t\t<div className={styles['CurrentInfo__details__item']}>\n\t\t\t\t\t<span>WIND</span>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<span>{props.wind} K/M</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default CurrentInfo;","import React, {useState, useEffect} from 'react';\nimport {getCode, getName} from 'country-list';\nimport Country from './Country/country';\nimport CurrentCity from './City/city';\nimport CurrentInfo from './Info/info';\nimport styles from './index.module.scss';\n\nconst Current = ({currentData, setLoading, checkCityInput, updateDataArray}) => {\n\tconst defaultValue = currentData?.countryCode;\n\tconst [countryCode, setCountryCode] = useState(defaultValue);\n\n\tuseEffect(() => {\n\t\t\tsetCountryCode(defaultValue);\n\t\t},[defaultValue]\n\t);\n\n\tconst getCountryCode = (inputCountry) => {\n\t\tconst countryCodeLength = 2;\n\t\tconst validatedInput = getCode(inputCountry) || getName(inputCountry);\n\t\tif(validatedInput){\n\t\t\treturn (validatedInput.length > countryCodeLength) ? inputCountry : validatedInput; \n\t\t}\n\t\treturn false;\n\t}\n\n\tconst onCountryChange = (inputCountry) => {\n\t\tconst inputCode = getCountryCode(inputCountry);\n\t\treturn inputCode && setCountryCode(inputCode.toUpperCase());\n\t}\n\tconsole.log(currentData, 'currentData')\n\n\tconst {cityName, current} = currentData;\n\tconst {temperature, humidity, wind, weather} = current;\n\n\treturn (\n\t\t<div className={styles.Current}>\n\t\t\t<Country \t\n\t\t\t\tcountry={countryCode}\n\t\t\t\tonCountryChange={onCountryChange}\n\t\t\t/>\n\t\t\t<CurrentInfo    \n\t\t\t\ttemperature={temperature}\n\t\t\t\thumidity={humidity}\n\t\t\t\twind={wind}\n\t\t\t\tweather={weather}\t\t\n\t\t\t/>\n\t\t\t<CurrentCity \t\n\t\t\t\tcityName={cityName}\n\t\t\t\tcountry={countryCode}\n\t\t\t\tcheckCityInput={checkCityInput}\n\t\t\t\tsetLoading={setLoading}\n\t\t\t\tupdateDataArray={updateDataArray}\n\t\t\t/>\n\t\t\t<div className={styles.CurrentBottom} />\n\t\t</div>\n\t);\n}\n\n\nexport default Current;","import React, {Component} from 'react';\nimport styles from './otherCities.module.scss'\nclass OtherCityButton extends Component {\n\n\thandleClick = (e) => {\n\t\tthis.props.onOtherCitiesClick(this.props.index);\n\t};\n\n\trender() {\n\t\tconst {city, temperature, icon, description} = this.props;\n\t\t\n\t\treturn (\n\t\t\t<button \n\t\t\t\tclassName={styles.OtherCityButton}\n\t\t\t\tonClick = {this.handleClick}\n\t\t\t>\n\t\t\t\t<h3 className={styles['OtherCityButton__city']}>\n\t\t\t\t\t{city}\n\t\t\t\t</h3>\n\t\t\t\t<div className={styles['OtherCityButton__temperature']}>\n\t\t\t\t\t{Math.round(temperature)} °\n\t\t\t\t</div>\n\t\t\t\t<div className={styles['OtherCityButton__icon']}>\n\t\t\t\t\t<img src ={`http://openweathermap.org/img/wn/${icon}.png`} alt = {description}/>\n\t\t\t\t</div>\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default OtherCityButton;","import React from 'react';\nimport OtherCityButton from './otherCitiesBtn';\nimport styles from './otherCities.module.scss';\n\nfunction OtherCityBtnList ({cityArray, onOtherCitiesClick}) {\n\tconsole.log(cityArray, 'cityArray')\n\tconst buttons = cityArray?.map((city, index) => \n\t\t<OtherCityButton    \n\t\t\tkey = {`${city.countryCode}${city.cityName}`}\n\t\t\tcity = {city?.cityName}\n\t\t\ttemperature = {city?.current?.temperature}\n\t\t\ticon = {city?.current?.icon}\n\t\t\tdescription = {city?.current?.description}\n\t\t\tonOtherCitiesClick = {onOtherCitiesClick}\n\t\t\tindex = {index}  \n\t\t/>\n\t);\n\treturn (\n\t\t<div className={styles.OtherCityButtons}>\n\t\t\t{buttons}\n\t\t</div>\n\t);\n}\n\nexport default OtherCityBtnList;","import React from 'react';\nimport styles from './otherCities.module.scss';\nimport OtherCityBtnList from './otherCitiesBtnList'\n\nfunction OtherCity ({cityArray, onOtherCitiesClick}) {\n    return (\n        <div className={styles.OtherCity}>\n            <h2 className={styles['OtherCity__title']}>Other Cities</h2>\n            <OtherCityBtnList  \n                cityArray={cityArray}\n                onOtherCitiesClick={onOtherCitiesClick}\n            />\n        </div>\n    );\n}\n\nexport default OtherCity;","import React from 'react';\nimport styles from './ForecastWeather.module.scss'\n\nconst ForecastListItem = (props) => {\n    const iconUrlAddress = `http://openweathermap.org/img/wn/${props.info.icon}@2x.png`;\n    return (\n        <div className={styles['ForecastList__Item']}>\n            <h3 \n                className={styles['ForecastList__Item__day']}\n            >\n                {props.info.day}\n            </h3>\n            <img \n                className={styles['ForecastList__Item__icon']} \n                src={iconUrlAddress} \n                alt={props.info.icon}\n            />\n            <div\n                className={styles['ForecastList__Item__temperature']}\n            >\n                {props.info.temperature} °\n            </div>\n        </div>\n    );\n}\n\nexport default ForecastListItem;","import React from 'react';\nimport styles from './ForecastWeather.module.scss';\nimport ForecastListItem from './ForecastListItem';\n\nfunction ForecastWeather ({forecastArray}) {\n\tconst forecastList = forecastArray?.map((forecast) =>\n\t\t<ForecastListItem\n\t\t \tkey = {forecast.day} \n\t\t \tinfo = {forecast}\n\t\t/>\n\t);\n\treturn (\n\t\t<div className={styles['ForecastWeather']}>\n\t\t\t<h2 className={styles['ForecastWeather__title']}>\n\t\t\t\tForecast\n\t\t\t</h2>\n\t\t\t<div className={styles['ForecastList']}>\n\t\t\t\t{forecastList}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ForecastWeather;","import React from 'react';\nimport OtherCity from './OtherCities/index';\nimport ForecastWeather from './ForecastWeather/ForecastWeather';\nimport styles from './index.module.scss';\n\n\nfunction WeatherBottom ({ dataArray, onOtherCitiesClick }) {\n\tconst cityArray = dataArray?.slice(1);\n\tconst forecastArray = dataArray[0]?.forecast;\n\t\n\treturn (\n\t\t<div className={styles.WeatherBottom}>\n\t\t\t<OtherCity\n\t\t\t\tcityArray={cityArray}\n\t\t\t\tonOtherCitiesClick={onOtherCitiesClick}\n\t\t\t/>\n\t\t\t<div className={styles.division} />\n\t\t\t<ForecastWeather forecastArray={forecastArray}/>\n\t\t</div>\n\t);\n}\n\nexport default WeatherBottom;","import React, {useState, useEffect, useReducer} from 'react';\nimport styles from './index.module.scss';\nimport Current from '../Current/index';\nimport WeatherBottom from '../WeatherBottom/index';\nimport getWeather from '../../api/getWeather';\n\n/* data format\t\t\t\t\t\t\t\t\t\ndata\n\t- cityName\n\t- current\n\t\ttemperature\t\n\t\thumidity\n\t\twind\n\t\tweather\n\t\ticon\n\t\tdescription\n\t- forecast[0]-[4] (same a current)\n\t- countryCode \n*/\n\nconst Weather = () => {\n\tconst [loading, setLoading] = useState(true);\n\tconst [dataArray, dispatch] = useReducer(updateArray, []);\n\t\n\tfunction updateArray(dataArray, action) {\n\t\tconst newDataArray = dataArray?.map((city) => city);\n\t\tlet currentData;\n\t\tswitch(action.type) {\n\t\t\tcase 'New_Array':\n\t\t\t\treturn action.array;\n\t\t\tcase 'New_DATA':\n\t\t\t\tcurrentData  = action.data;\n\t\t\t\tnewDataArray.pop(); //return the last input\n\t\t\t\tbreak;\n\t\t\tcase 'SWITCH':\n\t\t\t\tcurrentData = newDataArray.splice(action.index, 1)[0]; //replace index element, then return the first element\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error();\n\t\t}\n\t\tnewDataArray.unshift(currentData); //add currentData to array\n\t\treturn newDataArray;\n\t}\n\t\n\tconst newData = (data) => {\n\t\tdispatch({\n\t\t\ttype: 'New_DATA',\n\t\t\tdata: data, \n\t\t});\n\t}\n\n\tconst reorderArray = (index) => {\n\t\tdispatch({\n\t\t\ttype: 'SWITCH',\n\t\t\tindex: index, \n\t\t});\n\t}\n\n\tconst newArray = (array) => {\n\t\tdispatch({\n\t\t\ttype: 'New_Array',\n\t\t\tarray: array, \n\t\t});\n\t}\n\n\n\tconst initialRequest = async() => {\n\t\tconst defaultCities = ['Brisbane', 'Sydney', 'Melbourne', 'Perth'];\n\t\tconst defaultCountry = 'AU';\n\t\tconst dataArray = [];\n\t\tfor(let i = 0; i < defaultCities.length; i++) {\n\t\t\tlet city = defaultCities[i];\n\t\t\tlet cityData = await getWeather(defaultCountry, city);\n\t\t\tdataArray.push(cityData);\n\t\t}\n\t\tnewArray(dataArray);\n\t\tsetLoading(false);\n\t};\n\n\tuseEffect(() => {\n\t\t\tinitialRequest();\n\t\t},\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t[]);\n\n\tconst onOtherCitiesClick = (buttonIndex) => {\n\t\tconst arrayIndex = buttonIndex + 1;\n\t\treorderArray(arrayIndex);\n\t}\n\n\tconst checkCityInput = (inputCity, inputCountry) => {\n\t\tconst arrayIndex = dataArray.findIndex((data) => {\n\t\t\treturn (data?.cityName?.toUpperCase() === inputCity?.toUpperCase()) &&\n\t\t\t\t\t(data?.countryCode === inputCountry);\n\t\t});\n\t\tif(arrayIndex > 0) {\n\t\t\tconst buttonIndex = arrayIndex - 1;\n\t\t\tonOtherCitiesClick(buttonIndex);\n\t\t\treturn false;\n\t\t}else{\n\t\t\treturn (arrayIndex === 0) ? false : true;\n\t\t}\n\t}\n\n\tconst currentData = dataArray[0];\n\n\treturn (\n\t\t<div className={styles.Weather}>\n\t\t\t{loading?\n\t\t\t\t<div className={styles.Current} style={{\n\t\t\t\t\tborderRadius : '32px',\n\t\t\t\t}}>\n\t\t\t\t\t<div className={styles.loading}>\n\t\t\t\t\t\tLoading...\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t:\n\t\t\t\t<>\n\t\t\t\t\t<Current\n\t\t\t\t\t\tcurrentData={currentData}\n\t\t\t\t\t\tsetLoading={setLoading}\n\t\t\t\t\t\tcheckCityInput={() => checkCityInput}\n\t\t\t\t\t\tupdateDataArray={newData}\n\t\t\t\t\t/>\n\t\t\t\t\t<WeatherBottom\n\t\t\t\t\t\tdataArray={dataArray}\n\t\t\t\t\t\tonOtherCitiesClick={onOtherCitiesClick}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default Weather;","import React from 'react';\nimport './App.css';\nimport Weather from './components/Weather/index'\n\n\nrequire('dotenv').config();\n\nfunction App() {\n\treturn (\n\t\t<div className = 'App'>\n\t\t\t<Weather/>\n\t\t</div>\n\t);\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Current\":\"info_Current__2v7ow\",\"division\":\"info_division__1CsH3\",\"CurrentBottom\":\"info_CurrentBottom__3UMN2\",\"CurrentInfo\":\"info_CurrentInfo__3FCf4\",\"CurrentInfo__temperature\":\"info_CurrentInfo__temperature__3th9V\",\"CurrentInfo__weather\":\"info_CurrentInfo__weather__1PuTB\",\"CurrentInfo__details\":\"info_CurrentInfo__details__29bqa\",\"CurrentInfo__details__item\":\"info_CurrentInfo__details__item__2QZaI\"};"],"sourceRoot":""}