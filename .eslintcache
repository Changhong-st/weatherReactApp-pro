[{"/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/index.js":"1","/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/App.js":"2","/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/api/getWeather.js":"3","/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/api/WeatherClass.js":"4","/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/utils/utils.js":"5","/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/components/Current/Country/country.jsx":"6","/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/components/Current/City/city.jsx":"7","/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/components/Current/Info/info.jsx":"8","/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/components/Current/index.jsx":"9","/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/components/WeatherBottom/ForecastWeather/ForecastWeather.jsx":"10","/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/components/Weather/index.jsx":"11","/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/components/WeatherBottom/index.jsx":"12","/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/components/WeatherBottom/ForecastWeather/ForecastListItem.jsx":"13","/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/components/WeatherBottom/OtherCities/otherCitiesBtnList.jsx":"14","/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/components/WeatherBottom/OtherCities/otherCitiesBtn.jsx":"15","/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/components/WeatherBottom/OtherCities/index.jsx":"16"},{"size":223,"mtime":1611066036129,"results":"17","hashOfConfig":"18"},{"size":229,"mtime":1611725314452,"results":"19","hashOfConfig":"18"},{"size":2053,"mtime":1612256374838,"results":"20","hashOfConfig":"18"},{"size":596,"mtime":1612282326320,"results":"21","hashOfConfig":"18"},{"size":834,"mtime":1611582270352,"results":"22","hashOfConfig":"18"},{"size":1155,"mtime":1611725139390,"results":"23","hashOfConfig":"18"},{"size":1356,"mtime":1612256404001,"results":"24","hashOfConfig":"18"},{"size":778,"mtime":1612075650726,"results":"25","hashOfConfig":"18"},{"size":1582,"mtime":1612256037886,"results":"26","hashOfConfig":"18"},{"size":554,"mtime":1611725200260,"results":"27","hashOfConfig":"18"},{"size":2936,"mtime":1612256465260,"results":"28","hashOfConfig":"18"},{"size":610,"mtime":1612253890861,"results":"29","hashOfConfig":"18"},{"size":812,"mtime":1611725196190,"results":"30","hashOfConfig":"18"},{"size":648,"mtime":1612253952020,"results":"31","hashOfConfig":"18"},{"size":773,"mtime":1611725221553,"results":"32","hashOfConfig":"18"},{"size":503,"mtime":1612253889948,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"ifr4ex",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/index.js",[],["70","71"],"/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/App.js",[],"/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/api/getWeather.js",["72"],"import { Weather, Forecast } from './WeatherClass';\nconst axios = require('axios');\n\nconst APPID =`${process.env.REACT_APP_APPID}`;\n\nconst openWeather = axios.create({\n    baseURL: 'http://api.openweathermap.org/data/2.5',\n    params: {\n        appid: APPID,\n    }\n});\n\nfunction requestWeather (location, weatherType = 'current') {\n    const route = (weatherType === 'forecast')? '/forecast':'/weather';\n    const response = openWeather.get(route, {\n        params: { \n            q: location\n        }\n    });\n    return response;\n}\n\nasync function getWeather (cc, city) {\n    const location = `${city}, ${cc}`;\n    return Promise.all([requestWeather(location), requestWeather(location, 'forecast')])\n    .then((responseArray) =>{\n        const curRes = responseArray[0];\n        const forRes = responseArray[1];\n        const cityName = forRes.data.city.name;\n        const countryCode = forRes.data.city.country;\n        const current = new Weather (curRes.data);\n        const rawForecast = forRes.data.list.map(item => new Weather(item));\n        const filteredForecast = filterRawForecast(rawForecast);\n        const forecast = formatForecast(filteredForecast);\n        const data = {cityName, countryCode, current, forecast};\n        return data;\n    })\n    .catch(err => {\n        console.log(err.message);\n    });\n}\n\nfunction filterRawForecast (rawForecast) {\n    let filteredForecast = [];\n    rawForecast.reduce((_, cur, index) => {\n        if (index % 8 === 0){\n            return filteredForecast.push(cur)\n        }\n    }, 0)\n    return filteredForecast;\n}\n\nfunction formatForecast (filteredForecast, days = 5) {\n\tconst dayList = ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN'];\n\tconst today = new Date();\n\tlet currentIndex = today.getDay() - 1;\n\tlet formattedForecast = [];\n\n\tfor (let i = 0; i < days; i++) {\n\t\tcurrentIndex = (currentIndex === dayList.length -1)? 0 : currentIndex + 1;\n        formattedForecast.push(new Forecast(filteredForecast[i], dayList[currentIndex]));\n\t}\n\treturn formattedForecast;\n}\n\nexport default getWeather;\n","/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/api/WeatherClass.js",[],"/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/utils/utils.js",[],"/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/components/Current/Country/country.jsx",[],"/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/components/Current/City/city.jsx",[],"/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/components/Current/Info/info.jsx",[],"/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/components/Current/index.jsx",[],"/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/components/WeatherBottom/ForecastWeather/ForecastWeather.jsx",[],"/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/components/Weather/index.jsx",["73"],"import React, {useState, useEffect, useReducer} from 'react';\nimport styles from './index.module.scss';\nimport Current from '../Current/index';\nimport WeatherBottom from '../WeatherBottom/index';\nimport getWeather from '../../api/getWeather';\n\n/* data format\t\t\t\t\t\t\t\t\t\ndata\n\t- cityName\n\t- current\n\t\ttemperature\t\n\t\thumidity\n\t\twind\n\t\tweather\n\t\ticon\n\t\tdescription\n\t- forecast[0]-[4] (same a current)\n\t- countryCode \n*/\n\nconst Weather = () => {\n\tconst [loading, setLoading] = useState(true);\n\tconst [dataArray, dispatch] = useReducer(updateArray, []);\n\t\n\tfunction updateArray(dataArray, action) {\n\t\tconst newDataArray = dataArray.map((city) => city);\n\t\tlet currentData;\n\t\tswitch(action.type) {\n\t\t\tcase 'New_Array':\n\t\t\t\treturn action.array;\n\t\t\tcase 'New_DATA':\n\t\t\t\tcurrentData  = action.data;\n\t\t\t\tnewDataArray.pop(); //return the last input\n\t\t\t\tbreak;\n\t\t\tcase 'SWITCH':\n\t\t\t\tcurrentData = newDataArray.splice(action.index, 1)[0]; //replace index element, then return the first element\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error();\n\t\t}\n\t\tnewDataArray.unshift(currentData); //add currentData to array\n\t\treturn newDataArray;\n\t}\n\t\n\tconst newData = (data) => {\n\t\tdispatch({\n\t\t\ttype: 'New_DATA',\n\t\t\tdata: data, \n\t\t});\n\t}\n\n\tconst reorderArray = (index) => {\n\t\tdispatch({\n\t\t\ttype: 'SWITCH',\n\t\t\tindex: index, \n\t\t});\n\t}\n\n\tconst newArray = (array) => {\n\t\tdispatch({\n\t\t\ttype: 'New_Array',\n\t\t\tarray: array, \n\t\t});\n\t}\n\n\n\tconst initialRequest = async() => {\n\t\tconst defaultCities = ['Brisbane', 'Sydney', 'Melbourne', 'Perth'];\n\t\tconst defaultCountry = 'AU';\n\t\tconst dataArray = [];\n\t\tfor(let i = 0; i < defaultCities.length; i++) {\n\t\t\tlet city = defaultCities[i];\n\t\t\tlet cityData = await getWeather(defaultCountry, city);\n\t\t\tdataArray.push(cityData);\n\t\t}\n\t\tnewArray(dataArray);\n\t\tsetLoading(false);\n\t};\n\n\tuseEffect(() => {\n\t\t\tinitialRequest();\n\t\t},\n\t\t[]);\n\n\tconst onOtherCitiesClick = (buttonIndex) => {\n\t\tconst arrayIndex = buttonIndex + 1;\n\t\treorderArray(arrayIndex);\n\t}\n\n\tconst checkCityInput = (inputCity, inputCountry) => {\n\t\tconst arrayIndex = dataArray.findIndex((data) => {\n\t\t\treturn (data.cityName.toUpperCase() === inputCity.toUpperCase()) &&\n\t\t\t\t\t(data.countryCode === inputCountry);\n\t\t});\n\t\tif(arrayIndex > 0) {\n\t\t\tconst buttonIndex = arrayIndex - 1;\n\t\t\tonOtherCitiesClick(buttonIndex);\n\t\t\treturn false;\n\t\t}else{\n\t\t\treturn (arrayIndex === 0) ? false : true;\n\t\t}\n\t}\n\n\tconst currentData = dataArray[0];\n\n\treturn (\n\t\t<div className={styles.Weather}>\n\t\t\t{loading?\n\t\t\t\t<div className={styles.Current} style={{\n\t\t\t\t\tborderRadius : '32px',\n\t\t\t\t}}>\n\t\t\t\t\t<div className={styles.loading}>\n\t\t\t\t\t\tLoading...\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t:\n\t\t\t\t<>\n\t\t\t\t\t<Current\n\t\t\t\t\t\tcurrentData={currentData}\n\t\t\t\t\t\tsetLoading={setLoading}\n\t\t\t\t\t\tcheckCityInput={() => checkCityInput}\n\t\t\t\t\t\tupdateDataArray={newData}\n\t\t\t\t\t/>\n\t\t\t\t\t<WeatherBottom\n\t\t\t\t\t\tdataArray={dataArray}\n\t\t\t\t\t\tonOtherCitiesClick={onOtherCitiesClick}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default Weather;","/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/components/WeatherBottom/index.jsx",[],"/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/components/WeatherBottom/ForecastWeather/ForecastListItem.jsx",[],"/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/components/WeatherBottom/OtherCities/otherCitiesBtnList.jsx",[],"/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/components/WeatherBottom/OtherCities/otherCitiesBtn.jsx",[],["74","75"],"/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/components/WeatherBottom/OtherCities/index.jsx",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":45,"column":40,"nodeType":"82","messageId":"83","endLine":45,"endColumn":42},{"ruleId":"84","severity":1,"message":"85","line":83,"column":3,"nodeType":"86","endLine":83,"endColumn":5,"suggestions":"87"},{"ruleId":"76","replacedBy":"88"},{"ruleId":"78","replacedBy":"89"},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"array-callback-return","Array.prototype.reduce() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialRequest'. Either include it or remove the dependency array.","ArrayExpression",["92"],["90"],["91"],"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},"Update the dependencies array to be: [initialRequest]",{"range":"95","text":"96"},[1830,1832],"[initialRequest]"]