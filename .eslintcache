[{"/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/index.js":"1","/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/App.js":"2","/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/api/getWeather.js":"3","/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/api/WeatherClass.js":"4","/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/utils/utils.js":"5","/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/components/Bottom/Bottom.jsx":"6","/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/components/Bottom/components/ForecastWeather.jsx":"7","/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/components/Bottom/components/OtherCities.jsx":"8","/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/components/Current/Current.jsx":"9","/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/components/Current/Country/country.jsx":"10","/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/components/Current/City/city.jsx":"11","/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/components/Current/Info/info.jsx":"12"},{"size":223,"mtime":1611066036129,"results":"13","hashOfConfig":"14"},{"size":4197,"mtime":1611584297972,"results":"15","hashOfConfig":"14"},{"size":2192,"mtime":1611587157534,"results":"16","hashOfConfig":"14"},{"size":409,"mtime":1611583048859,"results":"17","hashOfConfig":"14"},{"size":834,"mtime":1611582270352,"results":"18","hashOfConfig":"14"},{"size":452,"mtime":1611583183266,"results":"19","hashOfConfig":"14"},{"size":1160,"mtime":1611066714635,"results":"20","hashOfConfig":"14"},{"size":1829,"mtime":1611584100811,"results":"21","hashOfConfig":"14"},{"size":662,"mtime":1611584275676,"results":"22","hashOfConfig":"14"},{"size":1737,"mtime":1611584006852,"results":"23","hashOfConfig":"14"},{"size":1282,"mtime":1611583985474,"results":"24","hashOfConfig":"14"},{"size":691,"mtime":1611584252267,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"ifr4ex",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/index.js",[],["54","55"],"/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/App.js",["56"],"import React, {Component} from 'react';\nimport './App.css';\nimport Current from './components/Current/Current';\nimport WeatherBottom from './components/Bottom/Bottom';\nimport getWeather from './api/getWeather';\nimport {getCode, getName} from 'country-list';\n\nrequire('dotenv').config();\n/* hierarchy\nweather\t\t\t\t\t\t\t\tdata\n\t|-current\t\t\t\t\t\t\t- cityName\n\t|    |-city\t\t\t\t\t\t\t- current\n\t|    |-weather-info\t\t\t\t\t\ttemperature\t\n\t|    |-input\t\t\t\t\t\t\thumidity\n\t|-forecast\t\t\t\t\t\t\t\twind\n\t|    |-title\t\t\t\t\t\t\tweather\t\n\t|    |-info-list\t\t\t\t\t\ticon\t\t\n\t-other city\t\t\t\t\t\t\t\tdescription\n\t\t|-city list\t\t\t\t\t\t- forecast[0]-[4] (same a current)\n\t\t                                - countryCode \t\n*/\n\nclass Weather extends Component {\n\tconstructor (props) {\n\t\tsuper(props);\n\t\tthis.state ={\n\t\t\tcountryCode : 'AU', \n\t\t\tcity : 'Melbourne',\n\t\t\tdata : null,\n\t\t\tloading : true,\n\t\t\totherCities: []\n\t\t};\n\t\tthis.onCityChange = this.onCityChange.bind(this);\n\t\tthis.onCountryChange = this.onCountryChange.bind(this);\n\t\tthis.onOtherCitiesClick = this.onOtherCitiesClick.bind(this);\n\t}\n\n\tcheckCityInput(inputCity) {\n\t\tconst index = this.state.otherCities.findIndex((city) => {\n\t\t\treturn city.cityName.toUpperCase() === inputCity.toUpperCase();\n\t\t});\n\t\tif(index > 0){\n\t\t\tthis.onOtherCitiesClick(this.state.otherCities[index].cityName);\n\t\t\tconsole.log('click');\n\t\t\treturn false;\n\t\t}else{\n\t\t\treturn (inputCity.toUpperCase() !== this.state.city.toUpperCase());\n\t\t}\n\t}\n\n\tasync updateCity(inputCity) {\n\t\tthis.setState({\n\t\t\tloading : true\n\t\t});\n\t\tconst newData = await getWeather(this.state.countryCode, inputCity);\n\t\tif(newData === undefined) {\n\t\t\tthis.setState({\n\t\t\t\tloading : false\n\t\t\t});\n\t\t\treturn alert('country or city can not found');\n\t\t}\n\t\tconst newCity = newData.cityName;\n\t\tconst newOtherCities = this.state.otherCities.map((city) => city);\n\t\tnewOtherCities.shift();\n\t\tnewOtherCities.push(this.state.data);\n\t\tconsole.log('update');\n\t\tthis.setState({\n\t\t\tcity: newCity,\n\t\t\tdata: newData,\n\t\t\totherCities : newOtherCities,\n\t\t\tloading : false\n\t\t});\n\t}\n\n\tonCityChange(inputCity) {\n\t\treturn this.checkCityInput(inputCity) && this.updateCity(inputCity);\n\t}\n\n\tgetCountryCode(inputCountry) {\n\t\treturn getCode(inputCountry) || false;\n\t}\n\n\tonCountryChange(inputCountry){\n\t\tconst countryCode = this.getCountryCode(inputCountry);\n\t\tconsole.log(countryCode);\n\t\tif(countryCode) {\n\t\t\tthis.setState({\n\t\t\t\tcountryCode: countryCode\n\t\t\t});\n\t\t} \t\n\t}\n\n\tonOtherCitiesClick(selectedCity) {\n\t\tconst newOtherCities = this.state.otherCities.map((city) => city);\n\t\tconst selectedIndex = newOtherCities.findIndex((city) => city.cityName === selectedCity);\n\t\tconst newData = newOtherCities.splice(selectedIndex, 1, this.state.data)[0];\n\n\t\tthis.setState({\n\t\t\tdata : newData,\n\t\t\totherCities : newOtherCities\n\t\t});\n\t}\n\n\tasync initialRequest () {\n\t\tthis.setState({\n\t\t\tloading : true\n\t\t});\n\t\tconst {countryCode: country, city} = this.state;\n\t\tconst currentData = await getWeather(country, city);\n\t\tconst otherCityNameList = ['Sydney', 'Brisbane', 'Perth'];\n\t\tconst otherCityList = [];\n\t\tfor(let i = 0; i < otherCityNameList.length; i++) {\n\t\t\tlet city = otherCityNameList[i];\n\t\t\tlet otherCityData = await getWeather(country, city);\n\t\t\totherCityList.push(otherCityData);\n\t\t}\n\t\tthis.setState({\n\t\t\tdata : currentData,\n\t\t\tloading : false,\n\t\t\totherCities : otherCityList\n\t\t});\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.initialRequest();\n\t}\n\n\trender () {\n\t\tconst loadingStyle = {\n\t\t\tborderRadius : '32px',\n\t\t};\n\t\tconst {countryCode, data, loading, otherCities} = this.state;\n\t\n\t\treturn (\n\t\t\t<div className = 'Weather'>\n\t\t\t\t{loading?\n\t\t\t\t\t<div className = 'Current' style = {loadingStyle}>\n\t\t\t\t\t\t<div className = 'loading'>\n\t\t\t\t\t\t\tLoading...\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t:\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Current \tcurrent = {data.current}\n\t\t\t\t\t\t\t\t\tcity = {data.cityName}\n\t\t\t\t\t\t\t\t\tcountry = {countryCode}\n\t\t\t\t\t\t\t\t\tonCityChange = {this.onCityChange}\n\t\t\t\t\t\t\t\t\tonCountryChange = {this.onCountryChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<WeatherBottom \tcityArray = {otherCities}\n\t\t\t\t\t\t\t\t\t\tforecastArray = {data.forecast}\n\t\t\t\t\t\t\t\t\t\tonOtherCitiesClick = {this.onOtherCitiesClick}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\nfunction App() {\n\treturn (\n\t\t<div className = 'App'>\n\t\t\t<Weather/>\n\t\t</div>\n\t);\n}\n\n\nexport default App;","/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/api/getWeather.js",[],"/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/api/WeatherClass.js",[],"/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/utils/utils.js",[],["57","58"],"/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/components/Bottom/Bottom.jsx",[],"/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/components/Bottom/components/ForecastWeather.jsx",[],"/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/components/Bottom/components/OtherCities.jsx",[],"/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/components/Current/Current.jsx",[],"/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/components/Current/Country/country.jsx",["59"],"import React from 'react';\nimport {Component} from 'react';\n\nclass Country extends Component {\n    constructor(props) {\n        super(props);\n        this.defaultValue = 'Change country?';\n        this.state = {\n            countryValue : this.defaultValue,\n            hideInput : true\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleBlur = this.handleBlur.bind(this);\n        this.handleFocus = this.handleFocus.bind(this);\n    }\n\n    updateDisplay(inputValue) {\n\t\tthis.setState({\n\t\t\tcountryValue: inputValue\n\t\t});\n    }\n    \n    handleChange(e) {\n        this.updateDisplay(e.target.value);\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        this.props.onCountryChange(this.state.countryValue);\n    }\n\n    handleFocus(e) {\n\t\tif (this.state.countryValue === this.defaultValue) {\n\t\t\tthis.updateDisplay('');\n\t\t}\t\n\t}\n\n\thandleBlur(e) {\n\t\tif (this.state.countryValue === '') {\n\t\t\tthis.updateDisplay(this.defaultValue);\n\t\t}\t\n\t}\n\n    render() {\n        const {countryValue, hideInput} = this.state;\n        return (\n            <div className = 'Country'>\n                <div className = 'Country__name'>\n                    {this.props.country}\n                </div>\n                <form   className = 'Country__form'\n                        onSubmit = {this.handleSubmit}\n                >\n                    <input  value = {countryValue}\n                            onChange = {this.handleChange}\n                            onBlur = {this.handleBlur}\n                            onFocus = {this.handleFocus}\n                    />\n                </form>    \n            </div>\n        );\n    }\n}\n\nexport default Country;","/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/components/Current/City/city.jsx",[],"/Users/RichardLin/Desktop/weatherReactApp-pro/weather-app/src/App/components/Current/Info/info.jsx",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":6,"column":18,"nodeType":"66","messageId":"67","endLine":6,"endColumn":25},{"ruleId":"60","replacedBy":"68"},{"ruleId":"62","replacedBy":"69"},{"ruleId":"64","severity":1,"message":"70","line":46,"column":30,"nodeType":"66","messageId":"67","endLine":46,"endColumn":39},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'getName' is defined but never used.","Identifier","unusedVar",["71"],["72"],"'hideInput' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]